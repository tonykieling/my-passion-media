{"version":3,"sources":["components/Header.js","components/AddProduct.js","components/ListProducts.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","initialState","name","weight","height","width","depth","butonLabel","originalButonColorClass","AddProduct","useState","product","setState","refName","useRef","handleChangeData","event","target","value","prevState","setBtLabel","setBtColor","disableFormController","setDisableForm","disableFormFunction","newState","btLabel","btColor","saveProduct","a","preventDefault","console","log","current","focus","axios","post","headers","record","data","message","setTimeout","autoFocus","required","id","type","onChange","ref","disabled","style","textAlign","onClick","App","exact","path","ListProducts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2de4cc4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/header.css\";\n\nconst Header = () => {\n  return (\n    <div className=\"topnav\">\n      <a href=\"addProduct\">Add Product</a>\n      <a href=\"listProducts\">List Products</a>\n    </div>\n  );\n};\n\nexport default Header;","import React, { useState, useRef } from \"react\";\nimport \"../style/add-product.css\";\nimport axios from \"axios\";\n\nconst initialState = {\n  name: \"\",\n  weight: \"\",\n  height: \"\",\n  width: \"\",\n  depth: \"\"\n};\n\nconst butonLabel = \"Save Product\";\nconst originalButonColorClass = \"bt-style-green\";\n\nconst AddProduct = () => {\n  const [product, setState] = useState(initialState);\n  const refName   = useRef(null);\n\n\n  const handleChangeData = event => {\n    const { name, value } = event.target;\n\n    setState(prevState => ({ \n      ...prevState, \n      [name]: value\n    }));\n\n    setBtLabel(butonLabel);\n    setBtColor(originalButonColorClass);\n  };\n\n\n  // disable form controller\n  const [disableFormController, setDisableForm] = useState(false);\n\n  const disableFormFunction = (newState = false) => {\n    setDisableForm(newState);\n  }\n\n\n  const [ btLabel, setBtLabel ] = useState(butonLabel);\n  const [ btColor, setBtColor ] = useState(originalButonColorClass);\n\n\n  const saveProduct = async(event) => {\n    event.preventDefault();\n    console.log(\"tetttt\", product)\n\n    if (!product.name) {\n      setBtLabel(\"Please, fill name\");\n      setBtColor(\"bt-style-yellow\");\n      refName.current.focus();\n    } else {\n      disableFormFunction(true);\n      // const url = \"http://localhost:3333/product\";\n      const url = \"/product\";\n      // const data = { product.name, product.weight };\n      const data = \"\";\n      console.log(\"sending::\", product);\n\n      try {\n        const record = await axios.post( \n          url,\n          data,\n          {  \n            headers: { \n              \"Content-Type\": \"application/json\"\n            }\n        });\n        \nconsole.log(\"result:::\", record);\n        if (record.data.message)\n          setBtLabel(butonLabel);\n          //after receiving success from axios:\n          // change button, disable form and after a while defined in delayChangeButtonLabel, clear the form and focus in Name again\n        else setBtLabel(\"Try again, please\");\n        \n        } catch (error) {\n          console.log(\"### error post\", error);\n        }\n\n      setState(initialState);\n      setBtLabel(\"Product has been Added succesfully!\");\n      setBtColor(\"bt-style-blue\");\n\n      setTimeout(() => {\n        setBtLabel(butonLabel);\n        setBtColor(originalButonColorClass);\n        disableFormFunction();\n        refName.current.focus();\n      }, 2500);\n    }\n  }\n\n  return (\n    <div className=\"main\">\n      <h2 className = \"main-title\"> Add Product page</h2>\n\n      <form>\n        <div>\n          <span className = \"label-form\"> Name </span> \n          <input \n            autoFocus = { true }\n            required\n            id        = \"name\"\n            className = \"text-form\" \n            type      = \"text\"\n            name      = \"name\"\n            value     = { product.name }\n            onChange  = { handleChangeData }\n            ref       = { refName }\n            disabled  = { disableFormController }\n          ></input>\n        </div>\n\n        <div>\n          <span className = \"label-form\"> Weight </span>\n          <input \n            id          = \"weight\"\n            className   = \"text-form\" \n            type        = \"number\"\n            name        = \"weight\"\n            value       = { product.weight }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }\n          ></input>\n          <span className = \"units\">Kg</span>\n        </div>\n\n\n      <p className = \"label-form\"> Dimensions </p>\n\n        <div className = \"dimensions\">\n          <span className = \"dimensions-title\"> Height </span>\n          <input \n            id          = \"height\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"height\"\n            value       = { product.height }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }>\n          </input>\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div className   = \"dimensions\" >\n          <span className = \"dimensions-title\"> Width </span>\n          <input \n            id          = \"width\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"width\"\n            value       = { product.width }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }>\n          </input>\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div className = \"dimensions\">\n          <span className   = \"dimensions-title\" > Depth </span>\n          <input \n            id          = \"depth\"\n            type        = \"number\"\n            className   = \"dimensions-fields\" \n            name        = \"depth\"\n            value       = { product.depth }\n            onChange    = { handleChangeData}\n            disabled    = { disableFormController }>\n          </input>\n          <span className = \"units\">cm</span>\n        </div>\n\n        <div style = {{textAlign: \"center\"}}>\n          <button\n            type = \"submit\"\n            className = { btColor }\n            onClick = { saveProduct }\n          > { btLabel }\n          </button>\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\nexport default AddProduct;","import React from \"react\";\nimport \"../style/list-products.css\";\n\nconst AddProduct = () => {\n  return (\n    <div className=\"main\">\n      <p> List Products page</p>\n    </div>\n  );\n};\n\nexport default AddProduct;","import { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport './App.css';\nimport Header from \"./components/Header.js\";\nimport AddProduct from \"./components/AddProduct.js\";\nimport ListProducts from \"./components/ListProducts.js\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path = \"/addProduct\">\n          <AddProduct />\n        </Route>\n\n        <Route exact path = \"/listProducts\">\n          <ListProducts />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}